all = ['dchk']


'''Задача 2. 
Создайте модуль и напишите в нём функцию, которая получает на вход дату в 
формате DD.MM.YYYY Функция возвращает истину, если дата может существовать 
или ложь, если такая дата невозможна. Для простоты договоримся, что год может 
быть в диапазоне [1, 9999]. Весь период (1 января 1 года - 31 декабря 9999 
года) действует Григорианский календарь. Проверку года на високосность вынести 
в отдельную защищённую функцию.'''


def dchk(arg_str:str) -> bool:
    '''Проверяет, существует ли полученная на вход дата'''

    dd, mm, yyyy = map(int, arg_str.split("."))
    # print(type(dd), dd, type(mm), mm, type(yyyy), yyyy)
    if not (1 <= dd <= 31):
        return False
    elif not (1 <= mm <= 12):
        return False
    elif not (1 <= yyyy <= 9999):
        return False
    return _leap_check(dd, mm, yyyy)


def _leap_check(day, month, year) -> bool:
    '''Возвращает истину, если дата верна с учётом високосных лет'''

    max_feb_day = 28
    if year%4==0 and (year%100 != 0 or year%400==0):
        max_feb_day = 29
    return (1<=month<=12 and 1<=day<=max_feb_day)


if __name__ == '__main__':
    print("01.01.0001", "  ", dchk("01.01.0001"))
    print("24.02.2022", "  ", dchk("24.02.2022"))
    print("29.02.2020", "  ", dchk("29.02.2020"))   # Високосный
    print("29.02.2023", "  ", dchk("29.02.2023"))   # Не високосный
    print("32.13.0000", "  ", dchk("32.13.0000"))
